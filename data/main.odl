
template TemplateTest is TTestClass2()
{
}

template TemplateTest is TTestClass2(a)
{
}

template TemplateTest is TTestClass2(a, b)
{
}

namespace toto { }
namespace toto
{
	namespace tata
	{
		namespace chlobo { }
		
		template TemplateTest is TTestClass2(a, b,c)
		{
		}
		
		template TemplateTest2 is TTestClass2(a, b, c)
		{
		}
		
		tab0 is [ 0, 1, 5 ] + [] + [ 0 ]
		tabtab is tab0

		circular_reference is circular_reference2
		circular_reference2 is circular_reference

		object0 is TTestClass2
		{
		}

		object1 is TTestClass
		{

		}
	
		sum1 is TTestClass2
		{
			FVector = tabtab + [9]
			FInteger = 5 + 4 + 2
			FString = "toto"
			FObjectPointer = object0
			FTestClassBasePointer = object0

			FTestClass2BasePointer = nullptr

			FIntStringPair = [ 5, "string"]
			FFloatFloatPairVector = [ [ 4, 3 ], [ 3, 2 ], [ 2, 1 ] ]
			FFloatVectorIntVectorPair = [ [0, 1, 2, 3], [3, 2, 1, 0] ]
		}
	}
}

tab is [ 4, 1, 5 ] + [] + [ 0 ]

sum is TTestClass2
{
	FInteger = 5 + 4 + 2
	FString = "toto"
	
}


asignVector0 is TTestClass2
{
	FVector = [ 4, 5, 6 ]
	FString = "toto" + "tata"
}

object0 is TTestClass2
{
	FObjectInPlace = object0
	FObjectPointer = object0
	FObjectPointer = TTestClass2
					 {
						FObjectPointer = object0
					 }
}


// object1 is TTestClass2
// {
// 	FInteger = 1 + 2
// 	FObjectPointer = TTestClass2
// 					 {
//						FObjectPointer = object + TTestClass2{ FInteger = 6 + 4 + TTestClass2{ FInteger = 3 } }
//					 }
//}

// object2 is TTestClass2
// {
//	FInteger = 2
//	FObjectPointer = TTestClass2
//					 {
//						FObjectPointer = object
//					 } + TTestClass2
//					 {
//						FObjectPointer = object
//					 }
//}

// object3 is TTestClass2
// {
//	FInteger = 3
//	FObjectPointer = TTestClass2{ FObjectPointer = object)
// }


// object is TObject ( )
// {
//	v4 = [ 3 ]
// }

// object is TObject(bla)
// {
//	p0 = "test"
//	p1 = "toto"
// }


//object2 is TObject(bla, bla, bla)
//{
//	p0Integer = -1234 + 5
//	p1Integer = 1234564657841216
//
//	va = [ ]
//	vb = [ 5 ]
//	vc = [ 5, 2 ]
//	vd = [ 5, 2, 3 ]
//	ve = [ 5, 2, ]
//	vf = [ 5, ]
//
//    v0 = [ 5 + 2, "toto" ]
//	vb = 6
//    v1 = [ 5 + 2, "tata", ] + (5 - 3) * 2 + 4 * -5 
//	v3 = [ ]
//
//
//    propertyObject = object2
//}
//
//
